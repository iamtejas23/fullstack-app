# Fullstack CRUD Application - Single Docker Compose Configuration
# 
# PRODUCTION MODE (using Docker Hub images):
#   docker-compose up -d
#
# DEVELOPMENT MODE (building from source):
#   1. Comment out the 'image' lines
#   2. Uncomment the 'build' sections
#   3. Run: docker-compose up --build -d

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: fullstack-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fullstack-crud
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service
  backend:
    # PRODUCTION: Use Docker Hub image
    image: iamtejas23/fullstack-crud-backend:latest
    
    # DEVELOPMENT: Uncomment to build from source
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    
    container_name: fullstack-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/fullstack-crud?authSource=admin
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Application
  frontend:
    # PRODUCTION: Use Docker Hub image
    image: iamtejas23/fullstack-crud-frontend:latest
    
    # DEVELOPMENT: Uncomment to build from source
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    #   args:
    #     REACT_APP_API_URL: http://localhost:5000/api
    
    container_name: fullstack-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Named volumes
volumes:
  mongodb_data:
    driver: local

# Networks
networks:
  fullstack-network:
    driver: bridge
